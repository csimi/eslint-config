const e = ['error'];
const a = ['error', 'always'];
const n = ['error', 'never'];
const c = ['error', 'consistent'];

module.exports = {
	'plugins': [
		'indent-empty-lines',
	],
	'extends': [
		'eslint:recommended',
	],
	'rules': {
		// plugin rules
		'indent-empty-lines/indent-empty-lines': ['error', 'tab'],
		// possible problems
		'no-constructor-return': e,
		'no-duplicate-imports': e,
		'no-self-compare': e,
		'no-unused-private-class-members': e,
		'no-unused-vars': ['error', {
			'ignoreRestSiblings': true,
		}],
		'no-use-before-define': e,
		// suggestions
		'accessor-pairs': e,
		'block-scoped-var': e,
		'curly': e,
		'default-case': e,
		'default-case-last': e,
		'default-param-last': e,
		'dot-notation': e,
		'eqeqeq': e,
		'func-names': ['error', 'as-needed'],
		'grouped-accessor-pairs': e,
		'guard-for-in': e,
		'multiline-comment-style': ['error', 'starred-block'],
		'no-array-constructor': e,
		'no-bitwise': e,
		'no-caller': e,
		'no-confusing-arrow': e,
		'no-extend-native': e,
		'no-extra-bind': e,
		'no-extra-label': e,
		'no-floating-decimal': e,
		'no-implied-eval': e,
		'no-iterator': e,
		'no-label-var': e,
		'no-lonely-if': e,
		'no-mixed-operators': e,
		'no-multi-assign': e,
		'no-nested-ternary': e,
		'no-new-object': e,
		'no-new-wrappers': e,
		'no-octal-escape': e,
		'no-proto': e,
		'no-return-assign': e,
		'no-sequences': e,
		'no-shadow': e,
		'no-throw-literal': e,
		'no-underscore-dangle': e,
		'no-unneeded-ternary': e,
		'no-useless-computed-key': e,
		'no-useless-concat': e,
		'no-useless-constructor': e,
		'no-useless-rename': e,
		'no-useless-return': e,
		'no-var': e,
		'object-shorthand': ['error', 'always', {
			'avoidQuotes': true,
		}],
		'one-var': n,
		'one-var-declaration-per-line': a,
		'operator-assignment': a,
		'prefer-arrow-callback': ['error', {
			'allowNamedFunctions': true,
		}],
		'prefer-const': ['error', {
			'ignoreReadBeforeAssign': true,
		}],
		'prefer-exponentiation-operator': e,
		'prefer-numeric-literals': e,
		'prefer-object-spread': e,
		'prefer-promise-reject-errors': ['error', {
			'allowEmptyReject': true,
		}],
		'prefer-regex-literals': e,
		'prefer-rest-params': e,
		'prefer-spread': e,
		'prefer-template': e,
		'quote-props': a,
		'require-await': e,
		'radix': e,
		'symbol-description': e,
		'yoda': e,
		// layout and formatting
		'array-bracket-newline': c,
		'array-bracket-spacing': n,
		'array-element-newline': c,
		'arrow-parens': a,
		'arrow-spacing': e,
		'block-spacing': a,
		'brace-style': ['error', 'stroustrup'],
		'comma-dangle': ['error', 'always-multiline'],
		'comma-spacing': ['error', {
			'before': false,
			'after': true,
		}],
		'comma-style': ['error', 'last'],
		'computed-property-spacing': n,
		'dot-location': ['error', 'property'],
		'eol-last': e,
		'func-call-spacing': n,
		'function-call-argument-newline': c,
		'function-paren-newline': c,
		'generator-star-spacing': e,
		'implicit-arrow-linebreak': ['error', 'beside'],
		'indent': ['error', 'tab', {
			'SwitchCase': 1,
		}],
		'jsx-quotes': ['error', 'prefer-double'],
		'key-spacing': ['error', {
			'beforeColon': false,
			'afterColon': true,
			'mode': 'strict',
		}],
		'keyword-spacing': ['error', {
			'before': true,
			'after': true,
		}],
		'linebreak-style': ['error', 'unix'],
		'lines-between-class-members': a,
		'max-statements-per-line': ['error', {
			'max': 1,
		}],
		'new-parens': e,
		'no-mixed-spaces-and-tabs': ['error', 'smart-tabs'],
		'no-multi-spaces': e,
		'no-multiple-empty-lines': ['error', {
			'max': 2,
		}],
		'no-tabs': ['error', {
			'allowIndentationTabs': true,
		}],
		'no-trailing-spaces': ['error', {
			'skipBlankLines': true,
		}],
		'no-whitespace-before-property': e,
		'object-curly-spacing': a,
		'object-property-newline': e,
		'operator-linebreak': ['error', 'after', {
			'overrides': {
				'?': 'before',
				':': 'before',
			},
		}],
		'padded-blocks': n,
		'quotes': ['error', 'single', {
			'avoidEscape': true,
			'allowTemplateLiterals': true,
		}],
		'rest-spread-spacing': e,
		'semi': a,
		'semi-spacing': ['error', {
			'before': false,
			'after': true,
		}],
		'semi-style': ['error', 'last'],
		'space-before-blocks': a,
		'space-before-function-paren': a,
		'space-in-parens': n,
		'space-infix-ops': e,
		'space-unary-ops': ['error', {
			'words': true,
			'nonwords': false,
		}],
		'switch-colon-spacing': e,
		'template-curly-spacing': e,
		'template-tag-spacing': n,
		'unicode-bom': e,
		'wrap-iife': ['error', 'any'],
		'yield-star-spacing': e,
	},
};
